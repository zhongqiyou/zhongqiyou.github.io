{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"https://zhongqiyou.github.io","root":"/"},"pages":[{"title":"关于","date":"2020-02-21T05:47:12.828Z","updated":"2020-02-21T05:47:12.828Z","comments":false,"path":"about/index.html","permalink":"https://zhongqiyou.github.io/about/index.html","excerpt":"","text":"个人详细介绍本人姓名：钟启有 出生年月：1998-9-3 来自：广东-湛江 17年入学：正式踏入互联网方面知识 专业：计算机信息管理 必修课程：java ，android ，html，css ，javascript ， mysql ， php ， phonetoshop。 在校过程中考取： ps高级修图三级证书 、 网站制作高级三级证书 课程广泛，18年开始，方向性去学习有关于前端专业课程。在网上投简历，发现自己有很多不足之处。 然后自己在网上寻求学习知识，在学习路上，也得到了很多属于自己的学习方法。 比如：bilibili ， mdn ， jspang ，廖雪峰、阮一峰...一些手册、视频教 程、大神的博客都可以说是我所收获的一部分,还有一部分在我的右栏。自己 也有编写了作品：pc端《旧音乐》、移动端《万物商城》、微信小程序《自由风品台》。 爱好：篮球、音乐、转笔 生活愿望：和家人朋友旅行 事业愿望：全栈\\有自己的线上作品"},{"title":"分类","date":"2019-12-25T08:34:52.214Z","updated":"2019-12-25T08:34:52.214Z","comments":false,"path":"categories/index.html","permalink":"https://zhongqiyou.github.io/categories/index.html","excerpt":"","text":"一级标题"},{"title":"书单","date":"2019-12-28T13:31:51.008Z","updated":"2019-12-28T13:31:51.008Z","comments":false,"path":"books/index.html","permalink":"https://zhongqiyou.github.io/books/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2019-12-25T08:17:31.525Z","updated":"2019-12-24T07:52:51.661Z","comments":false,"path":"repository/index.html","permalink":"https://zhongqiyou.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-12-25T08:17:31.529Z","updated":"2019-12-24T07:52:51.661Z","comments":false,"path":"tags/index.html","permalink":"https://zhongqiyou.github.io/tags/index.html","excerpt":"","text":""},{"title":"test","date":"2019-12-25T07:28:01.000Z","updated":"2019-12-25T07:28:01.416Z","comments":true,"path":"test/index.html","permalink":"https://zhongqiyou.github.io/test/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-12-25T08:17:31.520Z","updated":"2019-12-24T07:52:51.661Z","comments":true,"path":"links/index.html","permalink":"https://zhongqiyou.github.io/links/index.html","excerpt":"","text":""},{"title":"","date":"2020-02-24T12:44:04.647Z","updated":"2020-02-24T12:10:47.199Z","comments":true,"path":"images/文字轮播/index.css","permalink":"https://zhongqiyou.github.io/images/%E6%96%87%E5%AD%97%E8%BD%AE%E6%92%AD/index.css","excerpt":"","text":"* { margin: 0; padding: 0; } html , body{ width: 100%; height: 100%; } body{ display: flex; justify-content: center; align-items: center; } .container { width: 250px; height: 30px; border-radius: 2px; border: 1px solid #000000; overflow: hidden; line-height: 30px; } .container>ul { width: 250px; height: 150px; animation: autoFunText 8s infinite; font-size: 12px; } .container>ul>li>a{ background: yellow; border-radius:2px; text-decoration: none; margin: 0 5px; padding:0 5px; } @keyframes autoFunText { 0% { margin-top: 0; } 20% { margin-top: -30px; } 40% { margin-top: -60px; } 60% { margin-top: -90px; } 80% { margin-top: -120px; } 100% { margin-top: -150px; } } .container li { line-height: 30px; }"},{"title":"","date":"2020-02-24T12:33:52.920Z","updated":"2020-02-24T12:13:17.706Z","comments":true,"path":"images/文字轮播/index.html","permalink":"https://zhongqiyou.github.io/images/%E6%96%87%E5%AD%97%E8%BD%AE%E6%92%AD/index.html","excerpt":"","text":"Document 热门 我是第一个广告文本 最新 我是第二个广告文本 新品 我是第三个广告文本 折扣 我是第四个广告文本 通知 我是第五个广告文本 热门 我是第一个广告文本"},{"title":"","date":"2020-02-24T13:29:39.203Z","updated":"2020-02-24T13:29:39.203Z","comments":true,"path":"images/无缝轮播/index.css","permalink":"https://zhongqiyou.github.io/images/%E6%97%A0%E7%BC%9D%E8%BD%AE%E6%92%AD/index.css","excerpt":"","text":"*{ margin: 0; padding: 0; } html , body{ width: 100%; height: 100%; } body{ display: flex; justify-content: center; align-items: center; } .container{ width: 500px; height: 400px; margin: 0 auto; overflow: hidden; position: relative; } .container>ul{ list-style: none; width:2500px; width: 100%; display: flex; } .container>ul>li>img{ width: 500px; height: 400px; } .container>div{ top: 0; left: 0; width: 100%; height: 100%; position: absolute; display: flex; justify-content: space-between; align-items: center; } .container>div>a{ font-size: 20px; text-decoration: none; color: #ffffff; background: rgba(0, 0,0, 0.5); padding: 10px; } .container>ol{ position: absolute; width: 100px; height: 15px; left: 200px; bottom: 0; display: flex; list-style: none; justify-content: space-between; z-index: 99; } .container>ol>li{ width: 15%; background: #ffffff; border-radius:50% ; line-height: 15px; text-align: center; font-size: 9px; cursor: pointer; } .btnstyle{ font-weight: bold; color: #ffffff; background: #000000 !important; }"},{"title":"","date":"2020-02-24T08:55:54.901Z","updated":"2020-02-24T08:55:54.901Z","comments":true,"path":"images/无缝轮播/index.html","permalink":"https://zhongqiyou.github.io/images/%E6%97%A0%E7%BC%9D%E8%BD%AE%E6%92%AD/index.html","excerpt":"","text":"Document 1 2 3 4"},{"title":"","date":"2020-02-24T13:17:44.776Z","updated":"2020-02-24T13:09:23.596Z","comments":true,"path":"images/透明轮播/index.css","permalink":"https://zhongqiyou.github.io/images/%E9%80%8F%E6%98%8E%E8%BD%AE%E6%92%AD/index.css","excerpt":"","text":"*{ margin: 0; padding: 0; } html , body{ width: 100%; height: 100%; } body{ display: flex; justify-content: center; align-items: center; } .container{ width: 500px; height: 400px; list-style: none; position: relative; margin: 0 auto; } .container>li{ width: 100%; height: 100%; position: absolute; } .container>li>img{ width: 100%; height: 100%; opacity: 0; } .container>ol{ width: 100px; height: 20px; position:absolute; list-style: none; bottom: 0; left: 200px; z-index: 99; } .container>ol>div{ width: 100%; height: 100%; display: flex; justify-content: space-between; align-items: center; } .container>ol>div>li{ background: #ffffff; border-radius: 100%; width: 15%; height: 75%; font-size: 9px; line-height: 125%; text-align: center; cursor: pointer; } .container>div{ width: 100%; height: 100%; position: absolute; display: flex; justify-content: space-between; align-items: center; } .container>div>a{ display: block; width: 30px; height: 30px; background:rgba(0, 0, 0, 0.5); color: #ffffff; font-size: 30px; line-height: 30px; text-decoration: none; text-align: center; } .btnstyle{ font-weight: bold; background: #000000 !important; color: #ffffff; }"},{"title":"","date":"2020-02-24T09:11:25.828Z","updated":"2020-02-24T09:11:25.828Z","comments":true,"path":"images/无缝轮播/index.js","permalink":"https://zhongqiyou.github.io/images/%E6%97%A0%E7%BC%9D%E8%BD%AE%E6%92%AD/index.js","excerpt":"","text":"const totalImg = document.querySelector(\".container>ul\"); const btnLR = document.querySelectorAll(\".container>div>a\"); const btnSmall = document.querySelectorAll(\".container>ol>li\"); const view = document.querySelector(\".container\"); // 初始化第一个小按钮的样式 btnSmall[0].classList.add(\"btnstyle\"); // 获取图片单个宽度 var imgWidth = document.querySelector(\".container>ul>li>img\").offsetWidth; var index = 0; var btnIndex = 0; var time = null; // 等待图片过渡完成开关 var bool = true; // 左按钮 btnLR[0].onclick = function () { if (bool) { if (index = 4) { index = 1 totalImg.style.marginLeft = 0 + \"px\"; } else { index++; } btnStyle(1, \"+\"); bool = false; } } // 单(小)按钮 btnSmall.forEach((value, i) => { btnSmall[i].onclick = function () { if (bool) { btnIndex = i + 1; if (i > index) { index = i; btnStyle(\"\", \"+\"); } else { index = i; btnStyle(\"\", \"-\"); } bool = false; } } }); // 自动 autoImg(); // 鼠标移入轮播视图取消自动 view.onmouseover = function () { clearInterval(time); } // 鼠标移出轮播视图启动自动 view.onmouseout = function () { autoImg(); } // 自动切换封装 function autoImg() { time = setInterval(() => { if (bool) { if (index >= 4) { index = 1 totalImg.style.marginLeft = 0 + \"px\"; } else { index++; } btnStyle(1, \"+\"); bool = false; } }, 2000); } // 图片过渡与按钮封装 function btnStyle(arrIndex, str) { if (arrIndex == 0) { btnIndex = 3 ? btnIndex = 0 : btnIndex++; } // 小按钮样式 btnSmall.forEach((value, i) => { btnSmall[i].classList.remove(\"btnstyle\"); }); btnSmall[btnIndex].classList.add(\"btnstyle\"); // 图片过渡 let time = setInterval(() => { var distance = -(totalImg.offsetLeft); let num = imgWidth * index; if (num == distance) { clearInterval(time); bool = true; } else { switch (str) { case \"-\": distance = distance - 50; break; case \"+\": distance = distance + 50; } totalImg.style.marginLeft = -distance + \"px\"; } }, 20); }"},{"title":"","date":"2020-02-24T13:16:56.364Z","updated":"2020-02-24T13:03:25.828Z","comments":true,"path":"images/透明轮播/index.html","permalink":"https://zhongqiyou.github.io/images/%E9%80%8F%E6%98%8E%E8%BD%AE%E6%92%AD/index.html","excerpt":"","text":"Document 1 2 3 4 5"},{"title":"","date":"2020-02-24T13:17:28.977Z","updated":"2020-02-24T13:07:36.504Z","comments":true,"path":"images/透明轮播/index.js","permalink":"https://zhongqiyou.github.io/images/%E9%80%8F%E6%98%8E%E8%BD%AE%E6%92%AD/index.js","excerpt":"","text":"var btnLR = document.querySelectorAll(\".container>div>a\"); var btnOTTFF = document.querySelectorAll(\".container>ol>div>li\"); var img = document.querySelectorAll(\".container>li>img\"); var btnStyle = document.querySelectorAll(\".container>ol>div>li\"); // 初始化小按钮样式 btnStyle[0].classList.add(\"btnstyle\"); var bool = true; var index = 0; // 左右按钮切换 btnLR.forEach((value, num) => { btnLR[num].onclick = function () { if(bool){ if (num == 0) { index = 4 ? index = 0 : index++ } time(); bool = false; } } }); // 小按钮切换 btnStyle.forEach((value, num) => { btnStyle[num].onclick = function () { if (bool) { index = num; time() bool = false; } } }); // 自动切换 setInterval(() => { if(bool){ index >= 4 ? index = 0 : index++; time(); bool = false; } }, 2000); function time() { // 初始化全部照片 img.forEach((value, i) => { img[i].style.opacity = 0; }); // 透明过渡显示 let tranNum = 0 let time = setInterval(() => { tranNum = tranNum + 0.1; if (tranNum > 1) { clearInterval(time); bool = true; } img[index].style.opacity = tranNum; }, 30); // 按钮切换样式 btnStyle.forEach((value, i) => { btnStyle[i].classList.remove(\"btnstyle\"); }); btnStyle[index].classList.add(\"btnstyle\"); }"},{"title":"","date":"2020-03-08T04:52:05.639Z","updated":"2020-03-08T04:52:05.639Z","comments":true,"path":"images/面试遇题1/index.html","permalink":"https://zhongqiyou.github.io/images/%E9%9D%A2%E8%AF%95%E9%81%87%E9%A2%981/index.html","excerpt":"","text":"Document .inline { display: inline-block; } .input-margin { margin: 10px; } .btn-margin { margin: 0px 10px 10px 5px; } .red { color: red; } .cursor{ cursor: pointer; } 添加商品 请输入商品名称 &times; 商品名称： 商品名称不能为空 , 请填写 取消 确定 全部商品 已选商品 未选商品 X var vue = new Vue({ el: \"#app\", data() { return { choice: [ { title: \"全部\", choiceName: \"all\" }, { title: \"已选\", choiceName: \"yes\" }, { title: \"未选\", choiceName: \"no\" } ], commodity: [ // 定义copy为了编辑商品input中value展示(展示旧值) ，edit为了 显示/隐藏 编辑(input) ，checked为了更好捕捉复选框勾选状态 { title: \"小米\", copy: \"小米\", checked: false, edit: false }, { title: \"aphone\", copy: \"aphone\", checked: false, edit: false }, { title: \"魅族\", copy: \"魅族\", checked: false, edit: false }, { title: \"三星\", copy: \"三星\", checked: false, edit: false }, { title: \"诺基亚\", copy: \"诺基亚\", checked: false, edit: false } ], modal: \"nomodal\",//bootstrap中的模态框 显示/隐藏 textSwi: false,//在模态框添加中 ， 如有输入错误，则显示 radioState: \"all\",//单选状态 } }, methods: { //点击事件：添加商品判断 ， 如输入错误，则文字警告，否则有效添加 onhidden() { if (this.$refs.control.value == \"\") { this.textSwi = true; this.modal = \"nomodal\"; } else { this.commodity.push({ title: this.$refs.control.value, copy: this.$refs.control.value, checked: false, edit: false }) this.modal = \"modal\"; this.textSwi = false; this.$refs.control.value = \"\"; } }, //双击事件： 编辑商品 ，展示输入框（input） getEdit(index) { this.allArrSwi[index].edit = true; this.allArrSwi[index].title = \"\"; }, // 回车事件：修改商品名称 complete(index) { this.allArrSwi[index].edit = false; this.allArrSwi[index].copy = this.$refs.title[index].value; this.allArrSwi[index].title = this.$refs.title[index].value; }, // 点击事件：删除指定商品 onDel(title) { let i = -1; this.commodity.forEach((value, index) => { if (value.title == title) { i = index; } }); this.commodity.splice(i, 1); } }, computed: { // 勾选单选不同状态 ，展示商品 allArrSwi() { if (this.radioState == \"all\") { return this.commodity; } else if (this.radioState == \"yes\") { return this.yesArr; } else if (this.radioState == \"no\") { return this.noArr; } }, // 已选商品 yesArr() { return this.commodity.filter((value, index) => { return value.checked == true; }); }, // 未选商品 noArr() { return this.commodity.filter((value, index) => { return value.checked == false; }); } } });"}],"posts":[{"title":"面试遇题1","slug":"interviewDemo","date":"2020-03-08T05:00:01.563Z","updated":"2020-03-08T06:45:07.775Z","comments":true,"path":"2020/03/08/interviewDemo/","link":"","permalink":"https://zhongqiyou.github.io/2020/03/08/interviewDemo/","excerpt":"","text":"Demo来源：上一年的二轮面试 ，面试官考的小demo，限时：2小时。 结果：回去等消息 分享:目前编写完成，正式分享出来。为了页面美观，用bootstrap（UI）搭建。 本文涉及技术：html、css、javascript、bootstrap4、vue、jquery 效果视屏链接：https://v.youku.com/v_show/id_XNDU3ODYyODQxNg==.html 接下来是源代码：html布局 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182&lt;body&gt; &lt;div id&#x3D;&quot;app&quot;&gt; &lt;div class&#x3D;&quot;container&quot;&gt; &lt;!-- 添加商品start (添加按钮)--&gt; &lt;div class&#x3D;&quot;input-margin&quot;&gt; &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary&quot; data-toggle&#x3D;&quot;modal&quot; data-target&#x3D;&quot;#exampleModal&quot;&gt; 添加商品 &lt;&#x2F;button&gt; &lt;&#x2F;div&gt; &lt;!-- Modal --&gt; &lt;div class&#x3D;&quot;modal fade&quot; id&#x3D;&quot;exampleModal&quot; tabindex&#x3D;&quot;-1&quot; role&#x3D;&quot;dialog&quot; aria-labelledby&#x3D;&quot;exampleModalLabel&quot; aria-hidden&#x3D;&quot;true&quot;&gt; &lt;div class&#x3D;&quot;modal-dialog&quot; role&#x3D;&quot;document&quot;&gt; &lt;div class&#x3D;&quot;modal-content&quot;&gt; &lt;div class&#x3D;&quot;modal-header&quot;&gt; &lt;h5 class&#x3D;&quot;modal-title&quot; id&#x3D;&quot;exampleModalLabel&quot;&gt;请输入商品名称&lt;&#x2F;h5&gt; &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;close&quot; data-dismiss&#x3D;&quot;modal&quot; aria-label&#x3D;&quot;Close&quot;&gt; &lt;span aria-hidden&#x3D;&quot;true&quot;&gt;&amp;times;&lt;&#x2F;span&gt; &lt;&#x2F;button&gt; &lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;modal-body&quot;&gt; &lt;div class&#x3D;&quot;input-group mb-3&quot;&gt; &lt;div class&#x3D;&quot;input-group-prepend&quot;&gt; &lt;span class&#x3D;&quot;input-group-text&quot;&gt;商品名称：&lt;&#x2F;span&gt; &lt;&#x2F;div&gt; &lt;input type&#x3D;&quot;text&quot; ref&#x3D;&quot;control&quot; class&#x3D;&quot;form-control&quot; placeholder&#x3D;&quot;tradeName&quot;&gt; &lt;&#x2F;div&gt; &lt;p class&#x3D;&quot;red&quot; v-if&#x3D;&quot;textSwi&quot;&gt;商品名称不能为空 , 请填写&lt;&#x2F;p&gt; &lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;modal-footer&quot;&gt; &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-secondary&quot; data-dismiss&#x3D;&quot;modal&quot;&gt;取消&lt;&#x2F;button&gt; &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary&quot; :data-dismiss&#x3D;&quot;modal&quot; @click&#x3D;&quot;onhidden&quot;&gt;确定&lt;&#x2F;button&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;!-- 不同商品状态查看start (单选按钮)--&gt; &lt;div class&#x3D;&quot;custom-control custom-radio inline input-margin&quot; v-for&#x3D;&quot;(value , index) in choice&quot; :key&#x3D;&quot;index&quot;&gt; &lt;input type&#x3D;&quot;radio&quot; :id&#x3D;&quot;&#39;customRadio&#39;+index&quot; :value&#x3D;&#39;value.choiceName&#39; v-model&#x3D;&quot;radioState&quot; class&#x3D;&quot;custom-control-input&quot;&gt; &lt;label class&#x3D;&quot;custom-control-label&quot; :for&#x3D;&quot;&#39;customRadio&#39;+index&quot;&gt;&#123;&#123;value.title&#125;&#125;&lt;&#x2F;label&gt; &lt;&#x2F;div&gt; &lt;!-- 不同商品数目展示start (不同复选框勾选数目)--&gt; &lt;div&gt; &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary btn-margin&quot;&gt; 全部商品 &lt;span class&#x3D;&quot;badge badge-light&quot;&gt;&#123;&#123;commodity.length&#125;&#125;&lt;&#x2F;span&gt; &lt;&#x2F;button&gt; &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-success btn-margin&quot;&gt; 已选商品 &lt;span class&#x3D;&quot;badge badge-light&quot;&gt;&#123;&#123;yesArr.length&#125;&#125;&lt;&#x2F;span&gt; &lt;&#x2F;button&gt; &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-danger btn-margin&quot;&gt; 未选商品 &lt;span class&#x3D;&quot;badge badge-light&quot;&gt;&#123;&#123;noArr.length&#125;&#125;&lt;&#x2F;span&gt; &lt;&#x2F;button&gt; &lt;&#x2F;div&gt; &lt;!-- 选择商品start (商品勾选)--&gt; &lt;ul class&#x3D;&quot;list-group&quot;&gt; &lt;li class&#x3D;&quot;list-group-item d-flex justify-content-between align-items-center&quot; v-for&#x3D;&quot;(value, index) in allArrSwi&quot; :key&#x3D;&quot;index&quot; @dblclick&#x3D;&quot;getEdit(index)&quot;&gt; &lt;div class&#x3D;&quot;custom-control custom-checkbox&quot;&gt; &lt;input type&#x3D;&quot;checkbox&quot; class&#x3D;&quot;custom-control-input&quot; :id&#x3D;&quot;&#39;customCheck1&#39;+index&quot; v-model&#x3D;&quot;value.checked&quot;&gt; &lt;label class&#x3D;&quot;custom-control-label&quot; :for&#x3D;&quot;&#39;customCheck1&#39;+index&quot;&gt; &#123;&#123;value.title&#125;&#125; &lt;div class&#x3D;&quot;input-group mb-3&quot; v-show&#x3D;&quot;value.edit&quot;&gt; &lt;input type&#x3D;&quot;text&quot; @keyup.enter&#x3D;&quot;complete(index)&quot; class&#x3D;&quot;form-control&quot; ref&#x3D;&quot;title&quot; :value&#x3D;&quot;value.copy&quot; placeholder&#x3D;&quot;Username&quot;&gt; &lt;&#x2F;div&gt; &lt;&#x2F;label&gt; &lt;&#x2F;div&gt; &lt;span class&#x3D;&quot;badge badge-primary badge-pill cursor&quot; @click&#x3D;&quot;onDel(value.title)&quot;&gt;X&lt;&#x2F;span&gt; &lt;&#x2F;li&gt; &lt;&#x2F;ul&gt; &lt;&#x2F;div&gt; &lt;&#x2F;div&gt;&lt;&#x2F;body&gt; js脚本 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697&lt;!-- bootstrap + vue --&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3.4.1&#x2F;dist&#x2F;jquery.slim.min.js&quot; integrity&#x3D;&quot;sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;&lt;&#x2F;script&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;popper.js@1.16.0&#x2F;dist&#x2F;umd&#x2F;popper.min.js&quot; integrity&#x3D;&quot;sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;&lt;&#x2F;script&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;bootstrap@4.4.1&#x2F;dist&#x2F;js&#x2F;bootstrap.min.js&quot; integrity&#x3D;&quot;sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;&lt;&#x2F;script&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;vue&#x2F;2.4.2&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script&gt; var vue &#x3D; new Vue(&#123; el: &quot;#app&quot;, data() &#123; return &#123; choice: [ &#123; title: &quot;全部&quot;, choiceName: &quot;all&quot; &#125;, &#123; title: &quot;已选&quot;, choiceName: &quot;yes&quot; &#125;, &#123; title: &quot;未选&quot;, choiceName: &quot;no&quot; &#125; ], commodity: [ &#x2F;&#x2F; 定义copy为了编辑商品input中value展示(展示旧值) ，edit为了 显示&#x2F;隐藏 编辑(input) ，checked为了更好捕捉复选框勾选状态 &#123; title: &quot;小米&quot;, copy: &quot;小米&quot;, checked: false, edit: false &#125;, &#123; title: &quot;aphone&quot;, copy: &quot;aphone&quot;, checked: false, edit: false &#125;, &#123; title: &quot;魅族&quot;, copy: &quot;魅族&quot;, checked: false, edit: false &#125;, &#123; title: &quot;三星&quot;, copy: &quot;三星&quot;, checked: false, edit: false &#125;, &#123; title: &quot;诺基亚&quot;, copy: &quot;诺基亚&quot;, checked: false, edit: false &#125; ], modal: &quot;nomodal&quot;,&#x2F;&#x2F;bootstrap中的模态框 显示&#x2F;隐藏 textSwi: false,&#x2F;&#x2F;在模态框添加中 ， 如有输入错误，则显示 radioState: &quot;all&quot;,&#x2F;&#x2F;单选状态 &#125; &#125;, methods: &#123; &#x2F;&#x2F;点击事件：添加商品判断 ， 如输入错误，则文字警告，否则有效添加 onhidden() &#123; if (this.$refs.control.value &#x3D;&#x3D; &quot;&quot;) &#123; this.textSwi &#x3D; true; this.modal &#x3D; &quot;nomodal&quot;; &#125; else &#123; this.commodity.push(&#123; title: this.$refs.control.value, copy: this.$refs.control.value, checked: false, edit: false &#125;) this.modal &#x3D; &quot;modal&quot;; this.textSwi &#x3D; false; this.$refs.control.value &#x3D; &quot;&quot;; &#125; &#125;, &#x2F;&#x2F;双击事件： 编辑商品 ，展示输入框（input） getEdit(index) &#123; this.allArrSwi[index].edit &#x3D; true; this.allArrSwi[index].title &#x3D; &quot;&quot;; &#125;, &#x2F;&#x2F; 回车事件：修改商品名称 complete(index) &#123; this.allArrSwi[index].edit &#x3D; false; this.allArrSwi[index].copy &#x3D; this.$refs.title[index].value; this.allArrSwi[index].title &#x3D; this.$refs.title[index].value; &#125;, &#x2F;&#x2F; 点击事件：删除指定商品 onDel(title) &#123; let i &#x3D; -1; this.commodity.forEach((value, index) &#x3D;&gt; &#123; if (value.title &#x3D;&#x3D; title) &#123; i &#x3D; index; &#125; &#125;); this.commodity.splice(i, 1); &#125; &#125;, computed: &#123; &#x2F;&#x2F; 勾选单选不同状态 ，展示商品 allArrSwi() &#123; if (this.radioState &#x3D;&#x3D; &quot;all&quot;) &#123; return this.commodity; &#125; else if (this.radioState &#x3D;&#x3D; &quot;yes&quot;) &#123; return this.yesArr; &#125; else if (this.radioState &#x3D;&#x3D; &quot;no&quot;) &#123; return this.noArr; &#125; &#125;, &#x2F;&#x2F; 已选商品 yesArr() &#123; return this.commodity.filter((value, index) &#x3D;&gt; &#123; return value.checked &#x3D;&#x3D; true; &#125;); &#125;, &#x2F;&#x2F; 未选商品 noArr() &#123; return this.commodity.filter((value, index) &#x3D;&gt; &#123; return value.checked &#x3D;&#x3D; false; &#125;); &#125; &#125; &#125;);&lt;&#x2F;script&gt; css样式 123456789101112131415161718192021&lt;!-- bootstrap样式 --&gt; &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;bootstrap@4.4.1&#x2F;dist&#x2F;css&#x2F;bootstrap.min.css&quot; integrity&#x3D;&quot;sha384-Vkoo8x4CGsO3+Hhxv8T&#x2F;Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt; .inline &#123; display: inline-block; &#125; .input-margin &#123; margin: 10px; &#125; .btn-margin &#123; margin: 0px 10px 10px 5px; &#125; .red &#123; color: red; &#125; .cursor&#123; cursor: pointer; &#125; 以上就是本文的全部内容 ， 本文仅供参考~ 如有代码错误 或者 你也有自己更好的想法。可以在下方留言。我洗耳恭听，共同进步… 我会及时做出更正 , 谢谢~","categories":[{"name":"面试","slug":"面试","permalink":"https://zhongqiyou.github.io/categories/%E9%9D%A2%E8%AF%95/"}],"tags":[{"name":"面试题","slug":"面试题","permalink":"https://zhongqiyou.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"}]},{"title":"图片无缝轮播(按钮控制+自动切换+鼠标移入/移出)","slug":"wheelpanting3","date":"2020-02-23T15:49:24.239Z","updated":"2020-03-08T05:51:09.150Z","comments":true,"path":"2020/02/23/wheelpanting3/","link":"","permalink":"https://zhongqiyou.github.io/2020/02/23/wheelpanting3/","excerpt":"","text":"关于上一篇透明轮播：没有鼠标移入轮播视图时，让图片停止自动切换 与 鼠标移出轮播视图时，启动自动切换的更换功能。 无缝过渡轮播：正式把“鼠标 移入/移出”功能补上 ，图片选自“线上京东”网图。 注意：可能会有失效图片地址。你可以选择自身图片. 样式中包含css中flex布局。如有不懂，前往学习：http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html 本文涉及技术：html、css、javascript 效果视屏链接：https://v.youku.com/v_show/id_XNDU2MDMxNDIyNA==.html 接下来是源代码：html布局 123456789101112131415161718192021222324252627282930313233343536373839&lt;body&gt; &lt;div class&#x3D;&quot;container&quot;&gt; &lt;!-- 轮播图片 --&gt; &lt;ul&gt; &lt;li&gt; &lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img20.360buyimg.com&#x2F;babel&#x2F;s590x470_jfs&#x2F;t1&#x2F;100441&#x2F;5&#x2F;12532&#x2F;101378&#x2F;5e4a3b4eE4c807442&#x2F;bf61190512946daa.jpg.webp&quot; alt&#x3D;&quot;&quot;&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img14.360buyimg.com&#x2F;pop&#x2F;s590x470_jfs&#x2F;t1&#x2F;85986&#x2F;37&#x2F;11799&#x2F;95055&#x2F;5e3ce64bE2306ef3f&#x2F;f3314abc6248bbb7.jpg.webp&quot; alt&#x3D;&quot;&quot;&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img13.360buyimg.com&#x2F;pop&#x2F;s590x470_jfs&#x2F;t1&#x2F;91015&#x2F;40&#x2F;10083&#x2F;87653&#x2F;5e15aa98Eea5f9113&#x2F;e3165d6363298955.jpg.webp&quot; alt&#x3D;&quot;&quot;&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img14.360buyimg.com&#x2F;pop&#x2F;s590x470_jfs&#x2F;t1&#x2F;106727&#x2F;35&#x2F;11964&#x2F;77968&#x2F;5e44d8afEbe03f26b&#x2F;d74b87fcced1e74a.jpg.webp&quot; alt&#x3D;&quot;&quot;&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img20.360buyimg.com&#x2F;babel&#x2F;s590x470_jfs&#x2F;t1&#x2F;100441&#x2F;5&#x2F;12532&#x2F;101378&#x2F;5e4a3b4eE4c807442&#x2F;bf61190512946daa.jpg.webp&quot; alt&#x3D;&quot;&quot;&gt; &lt;&#x2F;li&gt; &lt;&#x2F;ul&gt; &lt;!-- 小按钮 --&gt; &lt;ol&gt; &lt;li&gt;1&lt;&#x2F;li&gt; &lt;li&gt;2&lt;&#x2F;li&gt; &lt;li&gt;3&lt;&#x2F;li&gt; &lt;li&gt;4&lt;&#x2F;li&gt; &lt;&#x2F;ol&gt; &lt;!-- 左右按钮 --&gt; &lt;div&gt; &lt;a href&#x3D;&quot;#javascript&quot;&gt;&lt;&lt;&#x2F;a&gt; &lt;a href&#x3D;&quot;#javascript&quot;&gt;&gt;&lt;&#x2F;a&gt; &lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;body&gt; js脚本 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127const totalImg &#x3D; document.querySelector(&quot;.container&gt;ul&quot;);const btnLR &#x3D; document.querySelectorAll(&quot;.container&gt;div&gt;a&quot;);const btnSmall &#x3D; document.querySelectorAll(&quot;.container&gt;ol&gt;li&quot;);const view &#x3D; document.querySelector(&quot;.container&quot;);&#x2F;&#x2F; 初始化第一个小按钮的样式btnSmall[0].classList.add(&quot;btnstyle&quot;);&#x2F;&#x2F; 获取图片单个宽度var imgWidth &#x3D; document.querySelector(&quot;.container&gt;ul&gt;li&gt;img&quot;).offsetWidth;var index &#x3D; 0;var btnIndex &#x3D; 0;var time &#x3D; null;&#x2F;&#x2F; 等待图片过渡完成开关var bool &#x3D; true;&#x2F;&#x2F; 左按钮btnLR[0].onclick &#x3D; function () &#123; if (bool) &#123; if (index &lt;&#x3D; 0) &#123; index &#x3D; 3 totalImg.style.marginLeft &#x3D; -4 * imgWidth + &quot;px&quot;; &#125; else &#123; index--; &#125; btnStyle(0, &quot;-&quot;); bool &#x3D; false; &#125;&#125;&#x2F;&#x2F; 右按钮btnLR[1].onclick &#x3D; function () &#123; if (bool) &#123; if (index &gt;&#x3D; 4) &#123; index &#x3D; 1 totalImg.style.marginLeft &#x3D; 0 + &quot;px&quot;; &#125; else &#123; index++; &#125; btnStyle(1, &quot;+&quot;); bool &#x3D; false; &#125;&#125;&#x2F;&#x2F; 单(小)按钮btnSmall.forEach((value, i) &#x3D;&gt; &#123; btnSmall[i].onclick &#x3D; function () &#123; if (bool) &#123; btnIndex &#x3D; i + 1; if (i &gt; index) &#123; index &#x3D; i; btnStyle(&quot;&quot;, &quot;+&quot;); &#125; else &#123; index &#x3D; i; btnStyle(&quot;&quot;, &quot;-&quot;); &#125; bool &#x3D; false; &#125; &#125;&#125;);&#x2F;&#x2F; 自动autoImg();&#x2F;&#x2F; 鼠标移入轮播视图取消自动view.onmouseover &#x3D; function () &#123; clearInterval(time);&#125;&#x2F;&#x2F; 鼠标移出轮播视图启动自动view.onmouseout &#x3D; function () &#123; autoImg();&#125;&#x2F;&#x2F; 自动切换封装function autoImg() &#123; time &#x3D; setInterval(() &#x3D;&gt; &#123; if (bool) &#123; if (index &gt;&#x3D; 4) &#123; index &#x3D; 1 totalImg.style.marginLeft &#x3D; 0 + &quot;px&quot;; &#125; else &#123; index++; &#125; btnStyle(1, &quot;+&quot;); bool &#x3D; false; &#125; &#125;, 2000);&#125;&#x2F;&#x2F; 图片过渡与按钮封装function btnStyle(arrIndex, str) &#123; if (arrIndex &#x3D;&#x3D; 0) &#123; btnIndex &lt;&#x3D; 0 ? btnIndex &#x3D; 3 : btnIndex--; &#125; else if (arrIndex &#x3D;&#x3D; 1) &#123; btnIndex &gt;&#x3D; 3 ? btnIndex &#x3D; 0 : btnIndex++; &#125; &#x2F;&#x2F; 小按钮样式 btnSmall.forEach((value, i) &#x3D;&gt; &#123; btnSmall[i].classList.remove(&quot;btnstyle&quot;); &#125;); btnSmall[btnIndex].classList.add(&quot;btnstyle&quot;); &#x2F;&#x2F; 图片过渡 let time &#x3D; setInterval(() &#x3D;&gt; &#123; var distance &#x3D; -(totalImg.offsetLeft); let num &#x3D; imgWidth * index; if (num &#x3D;&#x3D; distance) &#123; clearInterval(time); bool &#x3D; true; &#125; else &#123; switch (str) &#123; case &quot;-&quot;: distance &#x3D; distance - 50; break; case &quot;+&quot;: distance &#x3D; distance + 50; &#125; totalImg.style.marginLeft &#x3D; -distance + &quot;px&quot;; &#125; &#125;, 20);&#125; css样式 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273*&#123; margin: 0; padding: 0;&#125;html , body&#123; width: 100%; height: 100%;&#125;body&#123; display: flex; justify-content: center; align-items: center;&#125;.container&#123; width: 500px; height: 400px; margin: 0 auto; overflow: hidden; position: relative;&#125;.container&gt;ul&#123; list-style: none; width:2500px; width: 100%; display: flex;&#125;.container&gt;ul&gt;li&gt;img&#123; width: 500px; height: 400px;&#125;.container&gt;div&#123; top: 0; left: 0; width: 100%; height: 100%; position: absolute; display: flex; justify-content: space-between; align-items: center;&#125;.container&gt;div&gt;a&#123; font-size: 20px; text-decoration: none; color: #ffffff; background: rgba(0, 0,0, 0.5); padding: 10px;&#125;.container&gt;ol&#123; position: absolute; width: 100px; height: 15px; left: 200px; bottom: 0; display: flex; list-style: none; justify-content: space-between; z-index: 99;&#125;.container&gt;ol&gt;li&#123; width: 15%; background: #ffffff; border-radius:50% ; line-height: 15px; text-align: center; font-size: 9px; cursor: pointer;&#125;.btnstyle&#123; font-weight: bold; color: #ffffff; background: #000000 !important;&#125; 无缝轮播也有css3实现方法 ， 不过想控制轮播切换 ， 也是要js脚本。如果你要尝试css3写法时。提醒你一点：在写js控制轮播时,你必须要监听每一张图结束状态，来设定一个开关。具体怎么监听：transition也给出了对应的结束函数：transitionend。在这里就不多做介绍了。 对于轮播：无论我们学习哪一个UI框架(例如：boostrap\\vant\\element)都配有轮播，各种各样！ 最后分享一个轮播库：https://www.swiper.com.cn/ 以上就是本文的全部内容 ， 本文仅供参考~ 如有代码错误 或者 你也有自己更好的想法。可以在下方留言。我洗耳恭听，共同进步… 我会及时做出更正 , 谢谢~","categories":[{"name":"轮播","slug":"轮播","permalink":"https://zhongqiyou.github.io/categories/%E8%BD%AE%E6%92%AD/"}],"tags":[{"name":"原生","slug":"原生","permalink":"https://zhongqiyou.github.io/tags/%E5%8E%9F%E7%94%9F/"}]},{"title":"透明渐变图片轮播(按钮控制 + 自动切换)","slug":"wheelpanting2","date":"2020-02-19T16:46:11.990Z","updated":"2020-03-08T05:56:26.756Z","comments":true,"path":"2020/02/20/wheelpanting2/","link":"","permalink":"https://zhongqiyou.github.io/2020/02/20/wheelpanting2/","excerpt":"","text":"透明过渡轮播：图片来自“线上京东”网图。 样式中包含css中flex布局。如有不懂，前往学习：http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html 注意：可能会有失效图片地址。你可以选择自身图片 本文涉及技术：html、css、javascript 效果视屏链接：https://v.youku.com/v_show/id_XNDU2MDI4MjgyMA==.html 接下来是源代码：html布局 1234567891011121314151617181920212223242526272829303132&lt;body&gt; &lt;ul class&#x3D;&quot;container&quot;&gt; &lt;li&gt; &lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img14.360buyimg.com&#x2F;pop&#x2F;s590x470_jfs&#x2F;t1&#x2F;85986&#x2F;37&#x2F;11799&#x2F;95055&#x2F;5e3ce64bE2306ef3f&#x2F;f3314abc6248bbb7.jpg.webp&quot; alt&#x3D;&quot;&quot; style&#x3D;&quot;opacity: 1;&quot;&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img13.360buyimg.com&#x2F;pop&#x2F;s590x470_jfs&#x2F;t1&#x2F;91015&#x2F;40&#x2F;10083&#x2F;87653&#x2F;5e15aa98Eea5f9113&#x2F;e3165d6363298955.jpg.webp&quot; alt&#x3D;&quot;&quot;&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img14.360buyimg.com&#x2F;pop&#x2F;s590x470_jfs&#x2F;t1&#x2F;106727&#x2F;35&#x2F;11964&#x2F;77968&#x2F;5e44d8afEbe03f26b&#x2F;d74b87fcced1e74a.jpg.webp&quot; alt&#x3D;&quot;&quot;&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img14.360buyimg.com&#x2F;pop&#x2F;s590x470_jfs&#x2F;t1&#x2F;107724&#x2F;16&#x2F;6091&#x2F;178936&#x2F;5e475e18E55aecc6f&#x2F;597edf74bdb70a3a.jpg.webp&quot; alt&#x3D;&quot;&quot;&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img20.360buyimg.com&#x2F;babel&#x2F;s590x470_jfs&#x2F;t1&#x2F;100441&#x2F;5&#x2F;12532&#x2F;101378&#x2F;5e4a3b4eE4c807442&#x2F;bf61190512946daa.jpg.webp&quot; alt&#x3D;&quot;&quot;&gt; &lt;&#x2F;li&gt; &lt;ol&gt; &lt;div&gt; &lt;li&gt;1&lt;&#x2F;li&gt; &lt;li&gt;2&lt;&#x2F;li&gt; &lt;li&gt;3&lt;&#x2F;li&gt; &lt;li&gt;4&lt;&#x2F;li&gt; &lt;li&gt;5&lt;&#x2F;li&gt; &lt;&#x2F;div&gt; &lt;&#x2F;ol&gt; &lt;div&gt; &lt;a href&#x3D;&quot;#javascript&quot;&gt;&lt;&lt;&#x2F;a&gt; &lt;a href&#x3D;&quot;#javascript&quot;&gt;&gt;&lt;&#x2F;a&gt; &lt;&#x2F;div&gt; &lt;&#x2F;ul&gt;&lt;&#x2F;body&gt; js脚本 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970var btnLR &#x3D; document.querySelectorAll(&quot;.container&gt;div&gt;a&quot;);var btnOTTFF &#x3D; document.querySelectorAll(&quot;.container&gt;ol&gt;div&gt;li&quot;);var img &#x3D; document.querySelectorAll(&quot;.container&gt;li&gt;img&quot;);var btnStyle &#x3D; document.querySelectorAll(&quot;.container&gt;ol&gt;div&gt;li&quot;);&#x2F;&#x2F; 初始化小按钮样式btnStyle[0].classList.add(&quot;btnstyle&quot;);var bool &#x3D; true;var index &#x3D; 0;&#x2F;&#x2F; 左右按钮切换btnLR.forEach((value, num) &#x3D;&gt; &#123; btnLR[num].onclick &#x3D; function () &#123; if(bool)&#123; if (num &#x3D;&#x3D; 0) &#123; index &lt;&#x3D; 0 ? index &#x3D; 4 : index-- &#125; else &#123; index &gt;&#x3D; 4 ? index &#x3D; 0 : index++ &#125; time(); bool &#x3D; false; &#125; &#125;&#125;);&#x2F;&#x2F; 小按钮切换btnStyle.forEach((value, num) &#x3D;&gt; &#123; btnStyle[num].onclick &#x3D; function () &#123; if (bool) &#123; index &#x3D; num; time() bool &#x3D; false; &#125; &#125;&#125;);&#x2F;&#x2F; 自动切换setInterval(() &#x3D;&gt; &#123; if(bool)&#123; index &gt;&#x3D; 4 ? index &#x3D; 0 : index++; time(); bool &#x3D; false; &#125; &#125;, 2000);function time() &#123; &#x2F;&#x2F; 初始化全部照片 img.forEach((value, i) &#x3D;&gt; &#123; img[i].style.opacity &#x3D; 0; &#125;); &#x2F;&#x2F; 透明过渡显示 let tranNum &#x3D; 0 let time &#x3D; setInterval(() &#x3D;&gt; &#123; tranNum &#x3D; tranNum + 0.1; if (tranNum &gt; 1) &#123; clearInterval(time); bool &#x3D; true; &#125; img[index].style.opacity &#x3D; tranNum; &#125;, 30); &#x2F;&#x2F; 按钮切换样式 btnStyle.forEach((value, i) &#x3D;&gt; &#123; btnStyle[i].classList.remove(&quot;btnstyle&quot;); &#125;); btnStyle[index].classList.add(&quot;btnstyle&quot;);&#125; css样式 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980*&#123; margin: 0; padding: 0;&#125;html , body&#123; width: 100%; height: 100%;&#125;body&#123; display: flex; justify-content: center; align-items: center;&#125;.container&#123; width: 500px; height: 400px; list-style: none; position: relative; margin: 0 auto;&#125;.container&gt;li&#123; width: 100%; height: 100%; position: absolute;&#125;.container&gt;li&gt;img&#123; width: 100%; height: 100%; opacity: 0;&#125;.container&gt;ol&#123; width: 100px; height: 20px; position:absolute; list-style: none; bottom: 0; left: 200px; z-index: 99;&#125;.container&gt;ol&gt;div&#123; width: 100%; height: 100%; display: flex; justify-content: space-between; align-items: center;&#125;.container&gt;ol&gt;div&gt;li&#123; background: #ffffff; border-radius: 100%; width: 15%; height: 75%; font-size: 9px; line-height: 125%; text-align: center; cursor: pointer;&#125;.container&gt;div&#123; width: 100%; height: 100%; position: absolute; display: flex; justify-content: space-between; align-items: center;&#125;.container&gt;div&gt;a&#123; display: block; width: 30px; height: 30px; background:rgba(0, 0, 0, 0.5); color: #ffffff; font-size: 30px; line-height: 30px; text-decoration: none; text-align: center;&#125;.btnstyle&#123; font-weight: bold; background: #000000 !important; color: #ffffff;&#125; 看到这里你是否有这样的疑问：上面的html代码，有许多重复代码。为什么不用一些框架来进行页面渲染。至于为什么没有用，因为没有框架知识也能看懂。头部已声明：本文涉及到技术~ 以上就是本文的全部内容 ， 本文仅供参考~ 如有代码错误 或者 你也有自己更好的想法。可以在下方留言。我洗耳恭听，共同进步… 我会及时做出更正 , 谢谢~","categories":[{"name":"轮播","slug":"轮播","permalink":"https://zhongqiyou.github.io/categories/%E8%BD%AE%E6%92%AD/"}],"tags":[{"name":"原生","slug":"原生","permalink":"https://zhongqiyou.github.io/tags/%E5%8E%9F%E7%94%9F/"}]},{"title":"通知轮播(无脚本)","slug":"wheelplanting","date":"2019-12-30T09:32:02.791Z","updated":"2020-03-08T05:57:55.837Z","comments":true,"path":"2019/12/30/wheelplanting/","link":"","permalink":"https://zhongqiyou.github.io/2019/12/30/wheelplanting/","excerpt":"","text":"来源：根据苏宁官网效果来编写,类似移动端文字轮播,可根据自己的想法进行图片扩展 样式中包含css中flex布局。如有不懂，前往学习：http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html 本文涉及技术：html、css 效果视屏链接：https://v.youku.com/v_show/id_XNDU2MDIzODAxMg==.html 接下来是源代码：HTML源码 123456789101112131415161718192021222324252627282930&lt;body&gt; &lt;div class&#x3D;&quot;container&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;a href&#x3D;&quot;#javasrcipt&quot;&gt;热门&lt;&#x2F;a&gt; &lt;span&gt; 我是第一个广告文本&lt;&#x2F;span&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;a href&#x3D;&quot;#javasrcipt&quot;&gt;最新&lt;&#x2F;a&gt; &lt;span&gt;我是第二个广告文本&lt;&#x2F;span&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;a href&#x3D;&quot;#javasrcipt&quot;&gt;新品&lt;&#x2F;a&gt; &lt;span&gt;我是第三个广告文本&lt;&#x2F;span&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;a href&#x3D;&quot;#javasrcipt&quot;&gt;折扣&lt;&#x2F;a&gt; &lt;span&gt;我是第四个广告文本&lt;&#x2F;span&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;a href&#x3D;&quot;#javasrcipt&quot;&gt;通知&lt;&#x2F;a&gt; &lt;span&gt;我是第五个广告文本&lt;&#x2F;span&gt; &lt;&#x2F;li&gt; &lt;li&gt; &lt;a href&#x3D;&quot;#javasrcipt&quot;&gt;热门&lt;&#x2F;a&gt; &lt;span&gt; 我是第一个广告文本&lt;&#x2F;span&gt; &lt;&#x2F;li&gt; &lt;&#x2F;ul&gt; &lt;&#x2F;div&gt;&lt;&#x2F;body&gt; css样式 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667* &#123; margin: 0; padding: 0; &#125; html , body&#123; width: 100%; height: 100%; &#125; body&#123; display: flex; justify-content: center; align-items: center; &#125; .container &#123; width: 250px; height: 30px; border-radius: 2px; border: 1px solid #000000; overflow: hidden; line-height: 30px; &#125; .container&gt;ul &#123; width: 250px; height: 150px; animation: autoFunText 8s infinite; font-size: 12px; &#125; .container&gt;ul&gt;li&gt;a&#123; background: yellow; border-radius:2px; text-decoration: none; margin: 0 5px; padding:0 5px; &#125; @keyframes autoFunText &#123; 0% &#123; margin-top: 0; &#125; 20% &#123; margin-top: -30px; &#125; 40% &#123; margin-top: -60px; &#125; 60% &#123; margin-top: -90px; &#125; 80% &#123; margin-top: -120px; &#125; 100% &#123; margin-top: -150px; &#125; &#125; .container li &#123; line-height: 30px; &#125; 以上就是本文的全部内容 ， 本文仅供参考~ 如有代码错误 或者 你也有自己更好的想法。可以在下方留言。我洗耳恭听，共同进步… 我会及时做出更正 , 谢谢~","categories":[{"name":"轮播","slug":"轮播","permalink":"https://zhongqiyou.github.io/categories/%E8%BD%AE%E6%92%AD/"}],"tags":[{"name":"原生","slug":"原生","permalink":"https://zhongqiyou.github.io/tags/%E5%8E%9F%E7%94%9F/"}]},{"title":"自我介绍","slug":"introduce","date":"2019-12-25T08:17:31.541Z","updated":"2020-02-20T06:54:01.067Z","comments":true,"path":"2019/12/25/introduce/","link":"","permalink":"https://zhongqiyou.github.io/2019/12/25/introduce/","excerpt":"","text":"本人姓名：钟启有以后我会在我的博客这里 ， 分享一些个人代码。这些代码都是自己理解完 ， 在作编写。如有代码错误 或者 你也有自己更好的想法。可以在下方留言。我洗耳恭听，共同进步…个人详情介绍 ，可以移步到“关于”!","categories":[{"name":"个人","slug":"个人","permalink":"https://zhongqiyou.github.io/categories/%E4%B8%AA%E4%BA%BA/"}],"tags":[{"name":"自我介绍","slug":"自我介绍","permalink":"https://zhongqiyou.github.io/tags/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"}]}]}